name: Android CI

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - assets/**
      - README.md
      - LICENSE
      - .gitignore

jobs:
  buildArmDebug:
    name: Build armeabi-v7a Debug APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up KeyStore Password
        shell: bash 
        if: ${{ env.KEYSTOREPASSWORD != '' }}
        env:
          KEYSTOREPASSWORD: ${{ secrets.KEYSTOREPASSWORD }}
        run: |
          printf 'KEYSTOREPASSWORD<<EOF\n%s\nEOF\n' "$KEYSTOREPASSWORD" >> $GITHUB_ENV
        
      - name: Set up Firebase
        shell: bash 
        if: ${{ env.Firebase != '' }}
        env:
          Firebase: ${{ secrets.Firebase }}
        run: |
          printf 'Firebase<<EOF\n%s\nEOF\n' "$Firebase" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          
      - name: Allow gradlew permission
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew assembleArmDebug
          
      - name: Upload arm debug APK
        uses: actions/upload-artifact@v3
        with:
          name: android-appstudio-armeabi-v7a
          path: app/build/outputs/apk/arm/debug/app-arm-debug.apk

      - name: Upload arm output metadata
        uses: actions/upload-artifact@v3
        with:
          name: output-metadata-armeabi-v7a
          path: app/build/outputs/apk/arm/debug/output-metadata.json

  buildAarch64Debug:
    name: Build arm64-v8a Debug APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up KeyStore Password
        shell: bash 
        if: ${{ env.KEYSTOREPASSWORD != '' }}
        env:
          KEYSTOREPASSWORD: ${{ secrets.KEYSTOREPASSWORD }}
        run: |
          printf 'KEYSTOREPASSWORD<<EOF\n%s\nEOF\n' "$KEYSTOREPASSWORD" >> $GITHUB_ENV
        
      - name: Set up Firebase
        shell: bash 
        if: ${{ env.Firebase != '' }}
        env:
          Firebase: ${{ secrets.Firebase }}
        run: |
          printf 'Firebase<<EOF\n%s\nEOF\n' "$Firebase" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          
      - name: Allow gradlew permission
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew assembleAarch64Debug

      - name: Upload aarch64 debug APK
        uses: actions/upload-artifact@v3
        with:
          name: android-appstudio-arm64-v8a
          path: app/build/outputs/apk/aarch64/debug/app-aarch64-debug.apk

      - name: Upload aarch64 output metadata
        uses: actions/upload-artifact@v3
        with:
          name: output-metadata-arm64-v8a
          path: app/build/outputs/apk/aarch64/debug/output-metadata.json

  buildX86Debug:
    name: Build x86 Debug APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up KeyStore Password
        shell: bash 
        if: ${{ env.KEYSTOREPASSWORD != '' }}
        env:
          KEYSTOREPASSWORD: ${{ secrets.KEYSTOREPASSWORD }}
        run: |
          printf 'KEYSTOREPASSWORD<<EOF\n%s\nEOF\n' "$KEYSTOREPASSWORD" >> $GITHUB_ENV
        
      - name: Set up Firebase
        shell: bash 
        if: ${{ env.Firebase != '' }}
        env:
          Firebase: ${{ secrets.Firebase }}
        run: |
          printf 'Firebase<<EOF\n%s\nEOF\n' "$Firebase" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          
      - name: Allow gradlew permission
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew assembleX86Debug
          
      - name: Upload arm debug APK
        uses: actions/upload-artifact@v3
        with:
          name: android-appstudio-armeabi-v7a
          path: app/build/outputs/apk/arm/debug/app-arm-debug.apk

      - name: Upload x86 debug APK
        uses: actions/upload-artifact@v3
        with:
          name: android-appstudio-x86
          path: app/build/outputs/apk/x86/debug/app-x86-debug.apk

      - name: Upload x86 output metadata
        uses: actions/upload-artifact@v3
        with:
          name: output-metadata-x86
          path: app/build/outputs/apk/x86/debug/output-metadata.json

  buildX86_64Debug:
    name: Build x86_64 Debug APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up KeyStore Password
        shell: bash 
        if: ${{ env.KEYSTOREPASSWORD != '' }}
        env:
          KEYSTOREPASSWORD: ${{ secrets.KEYSTOREPASSWORD }}
        run: |
          printf 'KEYSTOREPASSWORD<<EOF\n%s\nEOF\n' "$KEYSTOREPASSWORD" >> $GITHUB_ENV
        
      - name: Set up Firebase
        shell: bash 
        if: ${{ env.Firebase != '' }}
        env:
          Firebase: ${{ secrets.Firebase }}
        run: |
          printf 'Firebase<<EOF\n%s\nEOF\n' "$Firebase" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          
      - name: Allow gradlew permission
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew assembleX86_64Debug

      - name: Upload x86_64 debug APK
        uses: actions/upload-artifact@v3
        with:
          name: android-appstudio-x86_64
          path: app/build/outputs/apk/x86_64/debug/app-x86_64-debug.apk

      - name: Upload x86_64 output metadata
        uses: actions/upload-artifact@v3
        with:
          name: output-metadata-x86_64
          path: app/build/outputs/apk/x86_64/debug/output-metadata.json

  uploadToTelegram:
    name: Upload APKs to Telegram
    needs: [buildArmDebug, buildAarch64Debug, buildX86Debug, buildX86_64Debug]
    runs-on: ubuntu-latest
    steps:
      - name: Download Arm Debug APK
        uses: actions/download-artifact@v3
        with:
          name: android-appstudio-armeabi-v7a
          path: ./artifacts

      - name: Download Aarch64 Debug APK
        uses: actions/download-artifact@v3
        with:
          name: android-appstudio-arm64-v8a
          path: ./artifacts

      - name: Download x86 Debug APK
        uses: actions/download-artifact@v3
        with:
          name: android-appstudio-x86
          path: ./artifacts

      - name: Download x86_64 Debug APK
        uses: actions/download-artifact@v3
        with:
          name: android-appstudio-x86_64
          path: ./artifacts

      - name: Get Latest Commit Message
        id: commit_message
        run: |
          echo "commit_message=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      - name: Send a starting message to Telegram
        id: send_initial_message
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          COMMIT_MESSAGE: ${{ env.commit_message }}
          $TELEGRAM_THREAD_ID: {{ secrets.TELEGRAM_THREAD_ID }}
        run: |
          response=$(curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d message_thread_id="$TELEGRAM_THREAD_ID" \
            -d text="$COMMIT_MESSAGE")
          echo "message_id=$(echo $response | jq -r '.result.message_id')" >> $GITHUB_ENV

      - name: Upload each APK file as a reply to the initial message
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          INITIAL_MESSAGE_ID: ${{ env.message_id }}
        run: |
          for file in ./artifacts/*; do
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendDocument" \
              -F chat_id="$TELEGRAM_CHAT_ID" \
              -F document=@"${file}" \
              -F caption="File: $(basename ${file})" \
              -F reply_to_message_id="$INITIAL_MESSAGE_ID"
          done
