plugins {
	id("application")
}

// Loading local properties files
def localPropsFile = rootProject.file("local.properties")
def properties = new Properties()

if (localPropsFile.exists()) {
    localPropsFile.withInputStream { inputStream ->
        properties.load(inputStream)
    }
}

application {
    mainClassName = "com.icst.android.appstudio.ExtensionGenerator"
}

task generateExtensions(type: JavaExec) {
    dependsOn("assemble")
    File outputDir = new File("${buildDir}/extensions");
    outputDir.mkdirs();

    String installExtensions = properties.getProperty("installExtensions", "false")
    String isDeveloperMode = properties.getProperty("isDeveloperMode", "false")
    String storage = properties.getProperty("STORAGE", "NOT_PROVIDED")

    classpath = sourceSets.main.runtimeClasspath
    main = "com.icst.android.appstudio.ExtensionGenerator"
    args = [outputDir.getAbsolutePath(), installExtensions, isDeveloperMode, storage]
}

task generateExtensionsJSONMetadata(type: JavaExec) {
    File outputDir = new File("${buildDir}/extensions/metadata");
    outputDir.mkdirs();

    classpath = sourceSets.main.runtimeClasspath
    main = "com.icst.android.appstudio.ExtensionsMetaDataGenerator"
    args = [outputDir.getAbsolutePath()]
}

dependencies {
    implementation project(":core")
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}