/*
 *  This file is part of Block IDLE.
 *
 *  Block IDLE is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Block IDLE is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *   along with Block IDLE.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
	id("application")
	id("de.undercouch.download")
}

application {
	mainClassName = "com.icst.blockidle.extension.ExtensionsZipWriter"
}

def downloadOpenJDK17() {
	if (!file("src/main/resources/openjdk-17-source.zip").exists()) {
		println "Downloading openjdk-17-source..."
		download.run {
			src "https://github.com/Innovative-CST/jdk17/releases/download/jdk17/src.zip"
			dest file("src/main/resources/openjdk-17-source.zip")
			overwrite false
			quiet true
		}
	}
}

task downloadOpenJDK17 {
	doLast {
		downloadOpenJDK17()
	}
}

task unzipFile(type: Copy) {
	downloadOpenJDK17()
	println "Unzipping openjdk-17-source"

	def zipFile = file("src/main/resources/openjdk-17-source.zip")
	def outputDir = file("$buildDir/unzipped/openjdk-17")

	from zipTree(zipFile)
	into outputDir
}

task generateExtensions(type: JavaExec) {
	dependsOn("assemble", "downloadOpenJDK17", "unzipFile")
	File outputDir = new File("${buildDir}/extensions")
	outputDir.mkdirs()

	classpath = sourceSets.main.runtimeClasspath
	main = "com.icst.blockidle.extension.ExtensionsZipWriter"
	args = [
		outputDir.getAbsolutePath(),
		"$buildDir/unzipped/openjdk-17",
		"src/main/resources/extension-source/android-sdk-35/src/java",
		"src/main/resources/extension-source/appcompat-1.7.0/src/java"
	]
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
	// For annotation processing
	implementation project(":annotations")
	implementation project(":extension-core")
	annotationProcessor project(":annotations-processor")
	implementation project(":beans:basebeans")
	implementation project(":beans:blockbeans")
	implementation project(":beans:javabeans")
}

sourceSets {
	main {
		java {
			srcDirs = ["src/main/java"]
		}
		resources {
			srcDirs = ["src/main/resources"]
		}
	}
}
